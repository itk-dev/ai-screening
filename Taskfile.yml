version: '3'

dotenv: [".task.env", ".env"]

vars:
  DOCKER_COMPOSE: '{{ .TASK_DOCKER_COMPOSE | default "docker compose" }}'

tasks:
  compose:
    cmds:
      - '{{ .DOCKER_COMPOSE }} {{ .CLI_ARGS }}'
    silent: true

  composer:
    cmds:
      - task compose -- exec phpfpm composer {{ .CLI_ARGS }}
    silent: true

  drush:
    cmds:
      - task compose -- exec --no-TTY phpfpm vendor/bin/drush {{ .CLI_ARGS }}
    silent: true

  build-site:new:
    desc: "Build a new site"
    cmds:
       - task drush -- site:install minimal -y

  build-site:existing-conf:
    desc: "Build the site using existing configuration from the config/sync folder"
    cmds:
      - task compose -- up --detach
      - task composer -- install
      - task drush -- site-install --existing-config --yes

  theme-build:
    desc: "Build theme"
    cmds:
      - task compose -- run --rm node yarn --cwd /app/web/themes/custom/itkdev/itkdev_base_theme install
      - task compose -- run --rm node yarn --cwd /app/web/themes/custom/itkdev/itkdev_base_theme build

  theme-watch:
    desc: "Build theme and watch for changes"
    cmds:
      - task theme-build
      - task compose -- run --rm node yarn --cwd /app/web/themes/custom/itkdev/itkdev_base_theme watch

  simulate-github-actions:
    desc: "Simulate most github actions to prepare the code and catch errors before github does"
    cmds:
      - task composer -- normalize
      - task check-code

  check-code:
    desc: "Check coding standards"
    cmds:
      - docker run --rm --volume "$PWD:/md" peterdavehello/markdownlint markdownlint $(git ls-files *.md)
      - task composer -- code-analysis
      - task composer -- coding-standards-check/twig-cs-fixer

  apply-fixtures:
    desc: "Apply fixtures"
    cmds:
      - task drush -- pm:install ai_screening_fixtures_base
      - task drush -- content-fixtures:load -y
      - task drush -- pm:uninstall ai_screening_fixtures_base content_fixtures

  apply-fixtures-groups:
    desc: "Apply one or more groups of fixtures"
    cmds:
      - task drush -- pm:install ai_screening_fixtures_base
      - task drush -- content-fixtures:load --groups={{.FIXTURE_GROUPS}} -y
      - task drush -- pm:uninstall ai_screening_fixtures_base content_fixtures
    requires:
      vars:
        - FIXTURE_GROUPS